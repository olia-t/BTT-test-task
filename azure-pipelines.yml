# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- release*

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'a02741b9-a124-4b43-8f63-80ec68c68bb4'
  imageRepository: 'nodejsdemoapp'
  containerRegistry: 'bttcontainerregistry1.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(appVersion)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - bash: |
        version=$(jq -r .version $(Build.SourcesDirectory)/nodejs-demo/src/package.json)
        echo "##vso[task.setvariable variable=appVersion]$version"
      
      displayName: 'Extract Version from package.json'
      env:
        BUILD_SOURCESDIRECTORY: $(Build.SourcesDirectory)
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(appVersion)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'
    
- stage: Deploy
  displayName: Deploy on Dev
  dependsOn: Build
  variables:
    acrsecret: akssecretacr
    acrurl: bttcontainerregistry1.azurecr.io
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        targetPath: '$(Pipeline.Workspace)/manifests'
    
    - task: KubernetesManifest@1
      inputs:
        action: 'createSecret'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'sc-azdo-aks-btt'
        namespace: 'default'
        secretType: 'dockerRegistry'
        secretName: '$(acrsecret)'
        dockerRegistryEndpoint: 'BTTcontainerregistry1'

    - task: KubernetesManifest@1
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'sc-azdo-aks-btt'
        namespace: 'default'
        manifests: |
          $(Pipeline.Workspace)/manifests/deployment.yml
          $(Pipeline.Workspace)/manifests/service.yml
        containers: '$(acrurl)/$(imageRepository)/$(appVersion)'